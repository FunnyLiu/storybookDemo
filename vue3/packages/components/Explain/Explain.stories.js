import { initProps } from '../../storybook/index'
import DoExplain from './index.vue'

export default {
  title: 'Basic基础/Explain小提示',
  component: DoExplain
}

const Template = (args, { argTypes }) => ({
  setup() {
    return { args }
  },
  methods: {},
  components: { DoExplain },
  template: `<div>
    <do-explain  v-bind="args"/>
  </div>`
})
export const 基础用法 = Template.bind({})
基础用法.args = {
  explain: '这里有一段介绍的内容，用来解释这个字段'
}

export const 长度 = Template.bind({})
长度.args = {
  explain:
    '这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.'
}

export const 尺寸 = Template.bind({})
尺寸.args = {
  size: '40px',
  explain: '这里有一段介绍的内容，用来解释这个字段'
}

export const 颜色 = Template.bind({})
颜色.args = {
  color: 'blue',
  explain: '这里有一段介绍的内容，用来解释这个字段'
}

export const 宽度 = Template.bind({})
宽度.args = {
  maxWidth: '200px',
  explain: '这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.这里有一段介绍的内容，用来解释这个字段.'
}
export const 添加popper类名 = Template.bind({})
添加popper类名.args = {
  popperClass: 'popperTemplate',
  explain: '这里有一段介绍的内容，用来解释这个字段.通过popperClass修改Toop文字样式.'
}
